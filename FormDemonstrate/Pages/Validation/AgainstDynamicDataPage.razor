@page "/validation-against-dynamic-data"
@using FormDemonstrate.FormModels.Validation
@using Microsoft.AspNetCore.Components.Forms
@implements IDisposable
<h3>Validation Against Dynamic Data Page</h3>
<EditForm EditContext="FormContext">
    <DataAnnotationsValidator/>
    <ValidationSummary Model="FormModel"/>
    <div>
        <label>
            IsTextAllowed:
            <InputRadioGroup @bind-Value="FormModel.IsTextAllowed">
                <label>
                    <InputRadio Value="true"/> True

                </label>
                <label>
                    <InputRadio Value="false" /> False
                </label>

            </InputRadioGroup>
        </label>
    </div>
    <div>
        <label>
            Text:
            <InputText @bind-Value="FormModel.Text" />
        </label>
    </div>
    <ValidationMessage For="() => FormModel.Text"/>
    <button>Submit</button>

</EditForm>


<h1><NavLink href="/">Back to Index</NavLink></h1>

@code {
    public EditContext FormContext { get; set; }

    public AgainstDynamicDataFormModel FormModel { get; set; } = new();

    public ValidationMessageStore ValidationMessageStore { get; set; }

    protected override void OnInitialized()
    {
        FormContext = new(FormModel);
        ValidationMessageStore = new(FormContext);
        FormContext.OnFieldChanged += OnFormContextFieldChanged;

    }

    public void OnFormContextFieldChanged(object? sender, FieldChangedEventArgs args)
    {
        ValidationMessageStore.Clear();
        if (FormModel.IsTextAllowed is false && string.IsNullOrEmpty(FormModel.Text) is false)
        {
            ValidationMessageStore
                .Add(FormContext.Field(nameof(FormModel.Text)), "This error msg is for the individual field");
            ValidationMessageStore
                .Add(FormContext.Field(string.Empty), "This err msggg is for the entire form");

        }


        FormContext.Validate();

    }


    public void Dispose()
    {
        FormContext.OnFieldChanged -= OnFormContextFieldChanged;
    }



}
